{"ast":null,"code":"var _jsxFileName = \"/home/sandro/Documents/GitHub/my-app/src/fakedata.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fakedata = () => {\n  _s();\n  const [fakedata, setdata] = useState([]);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setdata({\n      monsters: users\n    }));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(fakedata, \"y8mFjejjmEta+4oQRoZffdjzIFE=\");\nexport default fakedata;","map":{"version":3,"names":["useEffect","useState","v4","React","jsxDEV","_jsxDEV","fakedata","_s","setdata","fetch","then","response","json","users","monsters","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/sandro/Documents/GitHub/my-app/src/fakedata.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { v4  } from 'uuid';\nimport React from 'react'\n\n\nconst fakedata = () => {\n  const [fakedata,setdata] = useState([]);\n  useEffect(()=>{\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setdata({ monsters: users }));\n\n  })\n  return (\n    <div>\n      \n    </div>\n  )\n}\n\nexport default fakedata\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAS,MAAM;AAC1B,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACD,QAAQ,EAACE,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACvCD,SAAS,CAAC,MAAI;IACZS,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,KAAK,IAAI,IAAI,CAACL,OAAO,CAAC;MAAEM,QAAQ,EAAED;IAAM,CAAC,CAAC,CAAC;EAErD,CAAC,CAAC;EACF,oBACER,OAAA;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEM;AAEV,CAAC;AAAAX,EAAA,CAbKD,QAAQ;AAed,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}